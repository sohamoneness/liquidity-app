{"version":3,"sources":["webpack:///src/app/services/common.service.ts"],"names":["CommonProvider","http","loadingCtrl","navCtrl","helper","serviceurl","create","message","loading","present","headers","Promise","resolve","reject","get","subscribe","res","dismiss","err","category_id","shop_id","userId","data","body","device_id","cartProductIds","cartProductsNames","cartProductPrices","cartQuantities","cartIsLiquors","post","product_name","sub_category_id","lat","lng","distance","id","name","email","gender","keywrdId","text","storeId","product_id","productId","providedIn"],"mappings":"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","file":"default~compare-compare-module~event-event-module~favourite-favourite-module~filter-distance-result-~5a4332da-es5.js","sourcesContent":["import {\n    AngularFirestore,\n    AngularFirestoreCollection\n} from '@angular/fire/firestore';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { combineAll } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Platform, NavController, MenuController, LoadingController } from '@ionic/angular';\nimport { HelperProvider } from 'src/app/services/helper.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommonProvider {\n    // serviceurl = \"https://liquiditybars.in/backend/admin/api/\";\n    serviceurl = \"http://liquiditybars.com/canada/backend/admin/api/\";\n    constructor(\n        public http: HttpClient,\n        private loadingCtrl: LoadingController,\n        private navCtrl: NavController,\n        public helper: HelperProvider,\n\n    ) { }\n\n    /**\n     * This method is for fetching home page data\n     * @returns \n     */\n    async fetchHomePageData() {\n        const loading = await this.loadingCtrl.create({\n            message: 'Loading...'\n        });\n        await loading.present();\n\n        let headers = new HttpHeaders({});\n        return new Promise((resolve, reject) => {\n            this.http.get(this.serviceurl + 'fetchHomePageData/', {\n                headers\n            })\n                .subscribe(res => {\n                    loading.dismiss();\n                    resolve(res);\n                }, (err) => {\n                    loading.dismiss();\n                    reject(err);\n                });\n        });\n    }\n\n    /**\n     * This method is for fetching sub categories\n     * @param category_id\n     * @returns \n     */\n    async fetchSubCategories(category_id) {\n\n        let headers = new HttpHeaders({});\n        return new Promise((resolve, reject) => {\n            this.http.get(this.serviceurl + 'fetchSubCategories/' + category_id, {\n                headers\n            })\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    /**\n     * This method is for fetching products shop and category wise\n     * @param category_id \n     * @param shop_id \n     * @returns \n     */\n    async fetchOtherProductsByCategory(category_id, shop_id, userId) {\n        const loading = await this.loadingCtrl.create({\n            message: 'Loading...'\n        });\n        await loading.present();\n\n        let headers = new HttpHeaders({});\n        return new Promise((resolve, reject) => {\n            this.http.get(this.serviceurl + 'fetchOtherProductsByCategory/' + category_id + '/' + shop_id + '/' +userId, {\n                headers\n            })\n                .subscribe(res => {\n                    loading.dismiss();\n                    resolve(res);\n                }, (err) => {\n                    loading.dismiss();\n                    reject(err);\n                });\n        });\n    }\n\n    /**\n     * This method is to add multiple items in cart\n     * @param data\n     * @returns \n     */\n    async addMultipleCartItems(data) {\n        const loading = await this.loadingCtrl.create({\n            message: 'Loading...'\n        });\n        await loading.present();\n\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json'\n        });\n        let body = 'device_id=' + data.device_id + '&cartProductIds=' + data.cartProductIds + '&cartProductsNames=' + data.cartProductsNames\n            + '&cartProductPrices=' + data.cartProductPrices + '&cartQuantities=' + data.cartQuantities\n            + '&cartIsLiquors=' + data.cartIsLiquors;\n\n        return new Promise((resolve, reject) => {\n            this.http.post(this.serviceurl + 'addMultipleCartItems/', body, {\n                headers\n            })\n                .subscribe(res => {\n                    loading.dismiss();\n                    resolve(res);\n                }, (err) => {\n                    loading.dismiss();\n                    reject(err);\n                });\n        });\n    }\n\n    /**\n     * This method is for clearing the cart\n     * @param device_id\n     * @returns \n     */\n    async clearCart(device_id) {\n        let headers = new HttpHeaders({});\n        return new Promise((resolve, reject) => {\n            this.http.get(this.serviceurl + 'clearCart/' + device_id , {\n                headers\n            })\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    /**\n     * This method is for fetching product compare data\n     * @param data\n     * @returns \n     */\n    async compareProduct(data) {\n        const loading = await this.loadingCtrl.create({\n            message: 'Loading...'\n        });\n        await loading.present();\n\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json'\n        });\n        let body = 'product_name=' + data.product_name;\n\n        return new Promise((resolve, reject) => {\n            this.http.post(this.serviceurl + 'compareProduct/', body, {\n                headers\n            })\n                .subscribe(res => {\n                    loading.dismiss();\n                    resolve(res);\n                }, (err) => {\n                    loading.dismiss();\n                    reject(err);\n                });\n        });\n    }\n\n    /**\n     * This method is for fetching events data\n     * @returns \n     */\n     async fetchEvents() {\n        const loading = await this.loadingCtrl.create({\n            message: 'Loading...'\n        });\n        await loading.present();\n\n        let headers = new HttpHeaders({});\n        return new Promise((resolve, reject) => {\n            this.http.get(this.serviceurl + 'fetchEvents/', {\n                headers\n            })\n                .subscribe(res => {\n                    loading.dismiss();\n                    resolve(res);\n                }, (err) => {\n                    loading.dismiss();\n                    reject(err);\n                });\n        });\n    }\n\n    async fetchProducts(sub_category_id, shop_id) {\n        const loading = await this.loadingCtrl.create({\n            message: 'Loading...'\n        });\n        await loading.present();\n\n        let headers = new HttpHeaders({});\n        return new Promise((resolve, reject) => {\n            this.http.get(this.serviceurl + 'fetchProducts/' + sub_category_id + '/' + shop_id, {\n                headers\n            })\n                .subscribe(res => {\n                    loading.dismiss();\n                    resolve(res);\n                }, (err) => {\n                    loading.dismiss();\n                    reject(err);\n                });\n        });\n    }\n\n    async getSearchProducts(){\n        const loading = await this.loadingCtrl.create({\n            message: 'Loading...'\n        });\n        await loading.present();\n\n        let headers = new HttpHeaders({});\n        return new Promise((resolve, reject) => {\n            this.http.get(this.serviceurl + 'getSearchProducts/', {\n                headers\n            })\n                .subscribe(res => {\n                    loading.dismiss();\n                    resolve(res);\n                }, (err) => {\n                    loading.dismiss();\n                    reject(err);\n                });\n        });\n    }\n\n    /*map*/\n    async getDistanceResult(userId,lat, lng, distance){\n        const loading = await this.loadingCtrl.create({\n            message: 'Loading...'\n        });\n        await loading.present();\n\n        let headers = new HttpHeaders({});\n        return new Promise((resolve, reject) => {\n            this.http.get(this.serviceurl + 'filterShops?user_id='+userId+'&lat='+lat+'&lng='+lng+'&distance='+distance, {\n                headers\n            })\n                .subscribe(res => {\n                    loading.dismiss();\n                    resolve(res);\n                }, (err) => {\n                    loading.dismiss();\n                    reject(err);\n                });\n        });\n    }\n\n\n\n\n    updateProfile(data) {\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json'\n        });\n        let body = 'id=' + data.id + '&name=' + data.name + '&email=' + data.email+ '&gender=' + data.gender;\n        return new Promise((resolve, reject) => {\n            this.http.post(this.serviceurl + 'updateProfile/', body, {\n                headers\n            })\n                .subscribe(res => {\n                    // loading.dismiss();\n                    resolve(res);\n                }, (err) => {\n                    // loading.dismiss();\n                    reject(err);\n                });\n        });\n    }\n\n    \n    /*\n        call api to get search history\n    */\n\n    async getUserSearchHistory(userId){\n        const loading = await this.loadingCtrl.create({\n            message: 'Loading...'\n        });\n        await loading.present();\n\n        let headers = new HttpHeaders({});\n        return new Promise((resolve, reject) => {\n            this.http.get(this.serviceurl + 'getUserSearchHistory/'+userId, {\n                headers\n            })\n            .subscribe(res => {\n                loading.dismiss();\n                resolve(res);\n            }, (err) => {\n                loading.dismiss();\n                reject(err);\n            });\n        });\n    }\n\n    /*\n        call api to delete data frm history\n    */\n\n    async deleteKeyWord(keywrdId){\n        const loading = await this.loadingCtrl.create({\n            message: 'Loading...'\n        });\n        await loading.present();\n\n        let headers = new HttpHeaders({});\n        return new Promise((resolve, reject) => {\n            this.http.get(this.serviceurl + 'deleteSearchData/'+keywrdId, {\n                headers\n            })\n            .subscribe(res => {\n                loading.dismiss();\n                resolve(res);\n            }, (err) => {\n                loading.dismiss();\n                reject(err);\n            });\n        });\n    }\n\n    /*\n        call api to get search result\n    */\n\n   async getSearchResult(text,userId,lat,lng){\n        const loading = await this.loadingCtrl.create({\n            message: 'Loading...'\n        });\n        await loading.present();\n\n        let headers = new HttpHeaders({});\n        return new Promise((resolve, reject) => {\n            this.http.get(this.serviceurl + 'searchData?keyword='+text+'&user_id='+userId+'&lat='+lat+'&lng='+lng, {\n                headers\n            })\n                .subscribe(res => {\n                    loading.dismiss();\n                    resolve(res);\n                }, (err) => {\n                    loading.dismiss();\n                    reject(err);\n                });\n        });\n    }\n\n\n\n    /*\n        call api to save store in watchList\n    */\n    async favouriteShop(userId,storeId){\n        const loading = await this.loadingCtrl.create({\n            message: 'Loading...'\n        });\n        await loading.present();\n\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json'\n        });\n        let body = 'store_id=' + storeId + '&user_id=' + userId;\n        return new Promise((resolve, reject) => {\n            this.http.post(this.serviceurl + 'addToWatchList', body,{         \n                headers\n            })\n            .subscribe(res => {\n                loading.dismiss();\n                resolve(res);\n            }, (err) => {\n                loading.dismiss();\n                reject(err);\n            });\n        });\n    }\n\n    /*\n        call api to unsave store from watchList\n    */\n    async deleteFrmfavouriteShop(userId,storeId){\n        const loading = await this.loadingCtrl.create({\n            message: 'Loading...'\n        });\n        await loading.present();\n\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json'\n        });\n        return new Promise((resolve, reject) => {\n            this.http.get(this.serviceurl + 'removeFromWatchList/'+storeId+'/'+userId,{         \n                headers\n            })\n            .subscribe(res => {\n                loading.dismiss();\n                resolve(res);\n            }, (err) => {\n                loading.dismiss();\n                reject(err);\n            });\n        });\n    }\n\n    /*\n        call api to get watchList for user\n    */\n    async getwatchList(userId){\n        const loading = await this.loadingCtrl.create({\n            message: 'Loading...'\n        });\n        await loading.present();\n\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json'\n        });\n        return new Promise((resolve, reject) => {\n            this.http.get(this.serviceurl + 'viewWatchList/'+userId,{         \n                headers\n            })\n            .subscribe(res => {\n                loading.dismiss();\n                resolve(res);\n            }, (err) => {\n                loading.dismiss();\n                reject(err);\n            });\n        });\n    }\n\n\n    // *********************************************************** //\n\n     /*\n        call api to save product in favourite\n    */\n    async favouriteProducts(userId,product_id){\n        const loading = await this.loadingCtrl.create({\n            message: 'Loading...'\n        });\n        await loading.present();\n\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json'\n        });\n        let body = 'product_id=' + product_id + '&user_id=' + userId;\n        return new Promise((resolve, reject) => {\n            this.http.post(this.serviceurl + 'addToFavourite', body,{         \n                headers\n            })\n            .subscribe(res => {\n                loading.dismiss();\n                resolve(res);\n            }, (err) => {\n                loading.dismiss();\n                reject(err);\n            });\n        });\n    }\n\n    /*\n        call api to unsave product from favourite\n    */\n    async deleteFrmfavouriteProducts(userId,productId){\n        const loading = await this.loadingCtrl.create({\n            message: 'Loading...'\n        });\n        await loading.present();\n\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json'\n        });\n        return new Promise((resolve, reject) => {\n            this.http.get(this.serviceurl + 'removeFromFavourite/'+productId+'/'+userId,{         \n                headers\n            })\n            .subscribe(res => {\n                loading.dismiss();\n                resolve(res);\n            }, (err) => {\n                loading.dismiss();\n                reject(err);\n            });\n        });\n    }\n\n    /*\n        call api to get favouritelist for user\n    */\n    async getfavouriteList(userId){\n        const loading = await this.loadingCtrl.create({\n            message: 'Loading...'\n        });\n        await loading.present();\n\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Accept': 'application/json'\n        });\n        return new Promise((resolve, reject) => {\n            this.http.get(this.serviceurl + 'favouriteList/'+userId,{         \n                headers\n            })\n            .subscribe(res => {\n                loading.dismiss();\n                resolve(res);\n            }, (err) => {\n                loading.dismiss();\n                reject(err);\n            });\n        });\n    }\n\n    /*\n        call api to fetching stores from watchlist of favorite items\n    */\n   async getwatchListForItems(product_name, userId, lat, lng){\n    const loading = await this.loadingCtrl.create({\n        message: 'Loading...'\n    });\n    await loading.present();\n\n    let headers = new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Accept': 'application/json'\n    });\n    return new Promise((resolve, reject) => {\n        this.http.get(this.serviceurl + 'watchListPrice?'+'product_name='+product_name+\n        '&user_id='+userId+'&lat='+lat+'&lng='+lng,{         \n            headers\n        })\n        .subscribe(res => {\n            loading.dismiss();\n            resolve(res);\n        }, (err) => {\n            loading.dismiss();\n            reject(err);\n        });\n    });\n}\n\n\n\n\n\n}\n"]}