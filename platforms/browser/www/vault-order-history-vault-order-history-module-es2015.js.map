{"version":3,"sources":["./src/app/vault-order-history/vault-order-history.page.html","./src/app/vault-order-history/vault-order-history-routing.module.ts","./src/app/vault-order-history/vault-order-history.module.ts","./src/app/vault-order-history/vault-order-history.page.scss","./src/app/vault-order-history/vault-order-history.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,gjBAAif,oBAAoB,8DAA8D,mBAAmB,yDAAyD,gBAAgB,iEAAiE,iBAAiB,+UAA+U,E;;;;;;;;;;;;;;;;;;;ACAtiC;AACc;AAEY;AAEnE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+EAAqB;KACjC;CACF,CAAC;IAMW,kCAAkC,SAAlC,kCAAkC;CAAG;AAArC,kCAAkC;IAJ9C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,kCAAkC,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBN;AACM;AACF;AAEA;AAE6C;AAEvB;IAWtD,2BAA2B,SAA3B,2BAA2B;CAAG;AAA9B,2BAA2B;IATvC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,sGAAkC;SACnC;QACD,YAAY,EAAE,CAAC,+EAAqB,CAAC;KACtC,CAAC;GACW,2BAA2B,CAAG;AAAH;;;;;;;;;;;;;ACnBxC;AAAe,6GAA8C,2KAA2K,E;;;;;;;;;;;;;;;;;;;;;ACAtL;AACU;AACF;AAEjB;AACiC;IAO7D,qBAAqB,SAArB,qBAAqB;IAKhC,YACU,aAA4B,EAC5B,MAAsB,EACtB,OAAe,EACf,OAAsB;QAHtB,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,YAAO,GAAP,OAAO,CAAe;QAPzB,WAAM,GAAQ,CAAC,CAAC;QAChB,iBAAY,GAAQ,EAAE,CAAC;QAS5B,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAChD,CAAC;IAED,QAAQ;QACN,qCAAqC;QACrC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACjF,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACtB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;gBACpC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;QACH,CAAC,CAAC;IACJ,CAAC;IAGD,aAAa,CAAC,IAAI;QAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjB,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAChE,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC;IAEvD,CAAC;IACD,gBAAgB,CAAC,IAAI;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,eAAe;QACf,mBAAmB;QACnB,IAAI;QACJ,2DAA2D;QAC3D,gCAAgC;QAChC,+DAA+D;QAC/D,wBAAwB;QACxB,MAAM;QACN,KAAK;IACP,CAAC;CACF;;YAxDQ,qEAAa;YADb,uEAAc;YAGd,sDAAM;YACN,4DAAa;;AAOT,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,2PAA8C;;KAE/C,CAAC;GACW,qBAAqB,CA8CjC;AA9CiC","file":"vault-order-history-vault-order-history-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back-outline\\\" defaultHref=\\\"\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Vault Order History</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"title_bar\\\">\\n    <h2 class=\\\"title\\\">List Of Orders</h2>\\n  </div>\\n  <div class=\\\"order_list\\\">\\n    <ion-item *ngFor=\\\"let item of orderDetails\\\">\\n      <ion-thumbnail slot=\\\"start\\\">\\n        <img src=\\\"{{item.product_image}}\\\">\\n      </ion-thumbnail>\\n      <ion-label>\\n        <h3>{{item.product_name}}</h3>\\n        <p>Order ID: <span class=\\\"bold_count\\\">{{item.unique_id}}</span></p>\\n        <p>Order Date: <span class=\\\"bold_count\\\">{{item.order_date}}</span></p>\\n        <div class=\\\"btn_grp\\\">\\n          <ion-button fill=\\\"outline\\\" (click)=\\\"orderDetailss(item)\\\">ORDER DETAILS</ion-button>\\n          <!-- <ion-button fill=\\\"outline\\\" (click)=\\\"cancelVaultOrder(item)\\\">CANCEL ORDER</ion-button> -->\\n        </div>\\n      </ion-label>\\n    </ion-item>\\n\\n  </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VaultOrderHistoryPage } from './vault-order-history.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VaultOrderHistoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultOrderHistoryPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VaultOrderHistoryPageRoutingModule } from './vault-order-history-routing.module';\n\nimport { VaultOrderHistoryPage } from './vault-order-history.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    VaultOrderHistoryPageRoutingModule\n  ],\n  declarations: [VaultOrderHistoryPage]\n})\nexport class VaultOrderHistoryPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZhdWx0LW9yZGVyLWhpc3RvcnkvdmF1bHQtb3JkZXItaGlzdG9yeS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { HelperProvider } from '../services/helper.service';\nimport { VaultProvider } from '../services/vault.service';\nimport * as $ from 'jquery';\nimport { Router } from '@angular/router';\nimport { NavController, AlertController, Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-vault-order-history',\n  templateUrl: './vault-order-history.page.html',\n  styleUrls: ['./vault-order-history.page.scss'],\n})\nexport class VaultOrderHistoryPage implements OnInit {\n\n  public userId: any = 0;\n  public orderDetails: any = [];\n\n  constructor(\n    private vaultProvider: VaultProvider,\n    private helper: HelperProvider,\n    private _router: Router,\n    private navCtrl: NavController,\n\n  ) {\n    this.userId = localStorage.getItem('user_id');\n  }\n\n  ngOnInit() {\n    // this.getOrderDetails(this.userId);\n    console.log(localStorage.getItem(\"user_id\"));\n    this.vaultProvider.getVaultOrderList(localStorage.getItem(\"user_id\")).then((res) => {\n      if (res[\"status\"] == 1) {\n        this.orderDetails = res[\"products\"];\n        console.log(res);\n      }\n    })\n  }\n\n\n  orderDetailss(item) {\n    console.log(item)\n    localStorage.setItem('VaultOrderDetails', JSON.stringify(item));\n    localStorage.setItem(\"order_id\", item.id);\n    this.navCtrl.navigateForward('/vault-order-details');\n\n  }\n  cancelVaultOrder(item) {\n    console.log(item);\n    // let data = {\n    //   \"id\": item.id,\n    // }\n    // this._userDetails.cancelVaultOrder(data).then((res) => {\n    //   if (res[\"status\"] == '1') {\n    //     this.helper.presentToast('Item cancelled successfully');\n    //     console.log(res);\n    //   }\n    // })\n  }\n}\n\n"],"sourceRoot":"webpack:///"}