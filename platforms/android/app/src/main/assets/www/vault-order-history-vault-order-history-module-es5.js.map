{"version":3,"sources":["webpack:///src/app/vault-order-history/vault-order-history.page.html","webpack:///src/app/vault-order-history/vault-order-history-routing.module.ts","webpack:///src/app/vault-order-history/vault-order-history.module.ts","webpack:///src/app/vault-order-history/vault-order-history.page.scss","webpack:///src/app/vault-order-history/vault-order-history.page.ts"],"names":["routes","path","component","VaultOrderHistoryPageRoutingModule","imports","forChild","exports","VaultOrderHistoryPageModule","declarations","VaultOrderHistoryPage","vaultProvider","helper","_router","navCtrl","userId","orderDetails","localStorage","getItem","console","log","getVaultOrderList","then","res","item","setItem","JSON","stringify","id","navigateForward","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,kCAAkC;AAAA;AAAA,Q;;AAAlCA,wCAAkC,6DAJ9C,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI8C,GAAlCH,kCAAkC,CAAlC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,2BAA2B;AAAA;AAAA,Q;;AAA3BA,iCAA2B,6DATvC,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,sGAJO,CADD;AAORI,oBAAY,EAAE,CAAC,+EAAD;AAPN,OAAT,CASuC,GAA3BD,2BAA2B,CAA3B;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYFE,qBAAqB;AAKhC,uCACUC,aADV,EAEUC,MAFV,EAGUC,OAHV,EAIUC,OAJV,EAIgC;AAAA;;AAHtB,eAAAH,aAAA,GAAAA,aAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AAPH,eAAAC,MAAA,GAAc,CAAd;AACA,eAAAC,YAAA,GAAoB,EAApB;AASL,eAAKD,MAAL,GAAcE,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAd;AACD;;AAb+B;AAAA;AAAA,iBAehC,oBAAW;AAAA;;AACT;AACAC,mBAAO,CAACC,GAAR,CAAYH,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAZ;AACA,iBAAKP,aAAL,CAAmBU,iBAAnB,CAAqCJ,YAAY,CAACC,OAAb,CAAqB,SAArB,CAArC,EAAsEI,IAAtE,CAA2E,UAACC,GAAD,EAAS;AAClF,kBAAIA,GAAG,CAAC,QAAD,CAAH,IAAiB,CAArB,EAAwB;AACtB,qBAAI,CAACP,YAAL,GAAoBO,GAAG,CAAC,UAAD,CAAvB;AACAJ,uBAAO,CAACC,GAAR,CAAYG,GAAZ;AACD;AACF,aALD;AAMD;AAxB+B;AAAA;AAAA,iBA2BhC,uBAAcC,IAAd,EAAoB;AAClBL,mBAAO,CAACC,GAAR,CAAYI,IAAZ;AACAP,wBAAY,CAACQ,OAAb,CAAqB,mBAArB,EAA0CC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAA1C;AACAP,wBAAY,CAACQ,OAAb,CAAqB,UAArB,EAAiCD,IAAI,CAACI,EAAtC;AACA,iBAAKd,OAAL,CAAae,eAAb,CAA6B,sBAA7B;AAED;AAjC+B;AAAA;AAAA,iBAkChC,0BAAiBL,IAAjB,EAAuB;AACrBL,mBAAO,CAACC,GAAR,CAAYI,IAAZ,EADqB,CAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AA7C+B;;AAAA;AAAA,S;;;;gBAVzB;;gBADA;;gBAGA;;gBACA;;;;AAOId,2BAAqB,6DALjC,gEAAU;AACToB,gBAAQ,EAAE,yBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,wHAFS;;;;AAAA,OAAV,CAKiC,GAArBrB,qBAAqB,CAArB","file":"vault-order-history-vault-order-history-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back-outline\\\" defaultHref=\\\"\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Vault Order History</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"title_bar\\\">\\n    <h2 class=\\\"title\\\">List Of Orders</h2>\\n  </div>\\n  <div class=\\\"order_list\\\">\\n    <ion-item *ngFor=\\\"let item of orderDetails\\\">\\n      <ion-thumbnail slot=\\\"start\\\">\\n        <img src=\\\"{{item.product_image}}\\\">\\n      </ion-thumbnail>\\n      <ion-label>\\n        <h3>{{item.product_name}}</h3>\\n        <p>Order ID: <span class=\\\"bold_count\\\">{{item.unique_id}}</span></p>\\n        <p>Order Date: <span class=\\\"bold_count\\\">{{item.order_date}}</span></p>\\n        <div class=\\\"btn_grp\\\">\\n          <ion-button fill=\\\"outline\\\" (click)=\\\"orderDetailss(item)\\\">ORDER DETAILS</ion-button>\\n          <!-- <ion-button fill=\\\"outline\\\" (click)=\\\"cancelVaultOrder(item)\\\">CANCEL ORDER</ion-button> -->\\n        </div>\\n      </ion-label>\\n    </ion-item>\\n\\n  </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VaultOrderHistoryPage } from './vault-order-history.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VaultOrderHistoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultOrderHistoryPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VaultOrderHistoryPageRoutingModule } from './vault-order-history-routing.module';\n\nimport { VaultOrderHistoryPage } from './vault-order-history.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    VaultOrderHistoryPageRoutingModule\n  ],\n  declarations: [VaultOrderHistoryPage]\n})\nexport class VaultOrderHistoryPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZhdWx0LW9yZGVyLWhpc3RvcnkvdmF1bHQtb3JkZXItaGlzdG9yeS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { HelperProvider } from '../services/helper.service';\nimport { VaultProvider } from '../services/vault.service';\nimport * as $ from 'jquery';\nimport { Router } from '@angular/router';\nimport { NavController, AlertController, Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-vault-order-history',\n  templateUrl: './vault-order-history.page.html',\n  styleUrls: ['./vault-order-history.page.scss'],\n})\nexport class VaultOrderHistoryPage implements OnInit {\n\n  public userId: any = 0;\n  public orderDetails: any = [];\n\n  constructor(\n    private vaultProvider: VaultProvider,\n    private helper: HelperProvider,\n    private _router: Router,\n    private navCtrl: NavController,\n\n  ) {\n    this.userId = localStorage.getItem('user_id');\n  }\n\n  ngOnInit() {\n    // this.getOrderDetails(this.userId);\n    console.log(localStorage.getItem(\"user_id\"));\n    this.vaultProvider.getVaultOrderList(localStorage.getItem(\"user_id\")).then((res) => {\n      if (res[\"status\"] == 1) {\n        this.orderDetails = res[\"products\"];\n        console.log(res);\n      }\n    })\n  }\n\n\n  orderDetailss(item) {\n    console.log(item)\n    localStorage.setItem('VaultOrderDetails', JSON.stringify(item));\n    localStorage.setItem(\"order_id\", item.id);\n    this.navCtrl.navigateForward('/vault-order-details');\n\n  }\n  cancelVaultOrder(item) {\n    console.log(item);\n    // let data = {\n    //   \"id\": item.id,\n    // }\n    // this._userDetails.cancelVaultOrder(data).then((res) => {\n    //   if (res[\"status\"] == '1') {\n    //     this.helper.presentToast('Item cancelled successfully');\n    //     console.log(res);\n    //   }\n    // })\n  }\n}\n\n"]}